apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

// hilt
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.coroutineapplication"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // For Kotlin projects
    kotlinOptions {
        jvmTarget = "1.8"
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    def lifecycle_version = "2.2.0"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    def activity_version = "1.1.0"
    // Kotlin
    implementation "androidx.activity:activity-ktx:$activity_version"

    def coroutine_version = "1.3.4"
    // coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    def retrofit_version = "2.9.0"
    // retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    // retrofit instance를 빌드 할 때, Observable이나 Single 같은 타입으로 가져올 수 있음
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    def logging_version = "4.9.0"
    // okhttp3 api 로그 확인
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_version"

//    def rxjava_version = "2.2.19"
//    // rxJava2 : interface안에 Single 사용
//    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    def gson_version = "2.9.0"
    // gson
    implementation "com.squareup.retrofit2:converter-gson:$gson_version"

    def koin_version = "2.1.6"
    // koin
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"

    def hilt_version = "2.28.1-alpha"
    // hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    def hilt_viewmodel_version = "1.0.0-alpha01"
    // hilt viewmodel
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_viewmodel_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_viewmodel_version"
}
